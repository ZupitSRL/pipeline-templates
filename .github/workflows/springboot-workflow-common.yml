name: Springboot common

on:
  workflow_call:
    inputs:
      WORKING_DIRECTORY:
        required: true
        type: string
      JAVA_IMAGE:
        required: true
        type: string
      COVERAGE_ARTIFACT_NAME:
        required: false
        type: string
        default: "target"
      MAVEN_USER_HOME:
        required: false
        type: string
        default: "./m2"
      EXTRA_MAVEN_ARGS:
        required: false
        type: string
        default: ""
      USE_CI_POSTGRES:
        required: false
        type: boolean
        default: true
      RUN:
        required: false
        type: boolean
        default: true
      DATABASE:
        required: false
        type: string
        description: 'Database to use: postgres or mysql'
        default: 'postgres'

env: "${{secrets}}"

jobs:
  springboot-lint-check:
    uses:
      ./.github/workflows/springboot-step-lint-check.yml
    with:
      JAVA_IMAGE: ${{inputs.JAVA_IMAGE}}
      WORKING_DIRECTORY: ${{inputs.WORKING_DIRECTORY}}
      MAVEN_USER_HOME: ${{inputs.MAVEN_USER_HOME}}
      EXTRA_MAVEN_ARGS: ${{inputs.EXTRA_MAVEN_ARGS}}
      RUN: ${{inputs.RUN}}
    secrets: inherit

  springboot-tests:
    if: ${{ inputs.DATABASE == 'postgres'}}
    uses:
      ./.github/workflows/springboot-step-tests.yml
    with:
      JAVA_IMAGE: ${{inputs.JAVA_IMAGE}}
      WORKING_DIRECTORY: ${{inputs.WORKING_DIRECTORY}}
      MAVEN_USER_HOME: ${{inputs.MAVEN_USER_HOME}}
      EXTRA_MAVEN_ARGS: ${{inputs.EXTRA_MAVEN_ARGS}}
      COVERAGE_ARTIFACT_NAME: ${{ inputs.COVERAGE_ARTIFACT_NAME }}
      USE_CI_POSTGRES: ${{ inputs.USE_CI_POSTGRES }}
      RUN: ${{ inputs.RUN }}
    secrets: inherit

  springboot-tests-mysql:
    if: ${{ inputs.DATABASE == 'mysql'}}
    uses:
      ./.github/workflows/springboot-step-tests-mysql.yml
    with:
      JAVA_IMAGE: ${{inputs.JAVA_IMAGE}}
      WORKING_DIRECTORY: ${{inputs.WORKING_DIRECTORY}}
      MAVEN_USER_HOME: ${{inputs.MAVEN_USER_HOME}}
      EXTRA_MAVEN_ARGS: ${{inputs.EXTRA_MAVEN_ARGS}}
      COVERAGE_ARTIFACT_NAME: ${{ inputs.COVERAGE_ARTIFACT_NAME }}
      RUN: ${{ inputs.RUN }}
    secrets: inherit
