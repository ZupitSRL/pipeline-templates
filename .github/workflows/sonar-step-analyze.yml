name: Sonar analyze with artifacts

on:
  workflow_call:
    inputs:
      LABELS:
        required: true
        type: string
      WORKING_DIRECTORY:
        required: true
        type: string
      SONAR_IMAGE:
        required: false
        type: string
        default: "sonarsource/sonar-scanner-cli"
      SONAR_HOST_URL:
        required: false
        type: string
        default: "https://sonarqube.zupit.software"
      DOWNLOAD_ARTIFACT:
        required: false
        type: boolean
        default: true
      ARTIFACT_FILENAME:
        required: false
        type: string
        default: ""
      ARTIFACT_PATH:
        required: false
        type: string
        default: ".coverage-reports/"
      PRE_SCAN_COMMANDS:
        required: false
        type: string
        default: ""

env:
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

jobs:
  sonar-analyze:
    runs-on: ${{ fromJson(inputs.LABELS) }}
    container: ${{ inputs.SONAR_IMAGE }}
    defaults:
      run:
        working-directory: ${{ inputs.WORKING_DIRECTORY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.verbose=true
            -Dsonar.qualitygate.wait=true

      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        # Force to fail step after specific time.
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: "Example show SonarQube Quality Gate Status value"
        run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"

        # - name: Download coverage artifact
      #   if: ${{ inputs.DOWNLOAD_ARTIFACT }}
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: ${{inputs.ARTIFACT_FILENAME}}
      #     path: ${{ inputs.WORKING_DIRECTORY }}/${{ inputs.ARTIFACT_PATH }}

      # - name: Run PRE_SCAN_COMMANDS commands
      #   if: ${{ inputs.PRE_SCAN_COMMANDS != '' }}
      #   run: ${{ inputs.PRE_SCAN_COMMANDS }}

      # - name: Run Sonar
      #   run: sonar-scanner -Dsonar.host.url=${{ inputs.SONAR_HOST_URL }} -Dsonar.token=${{ secrets.SONAR_TOKEN }}
