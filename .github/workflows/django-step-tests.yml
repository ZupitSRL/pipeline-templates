name: Django Tests Workflow

on:
  workflow_call:
    inputs:
      LABELS:
        required: true
        type: string
      DJANGO_IMAGE:
        required: true
        type: string
      DJANGO_PATH:
        required: true
        type: string
      DJANGO_MIGRATIONS_CHECK_APPS:
        required: false
        type: string
        default: ""

env: "${{secrets}}"

jobs:
  django-tests:
    runs-on: ${{ fromJson(inputs.LABELS) }}
    container: ${{ inputs.DJANGO_IMAGE }}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: django-runner
          POSTGRES_PASSWORD: django-runner
          POSTGRES_DB: django
      redis:
        image: redis

    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          cd ${{ inputs.DJANGO_PATH }}
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install coverage
      - name: Copy env file
        run: |
          cd ${{ inputs.DJANGO_PATH }}
          cp .env.gitlab .env
      - name: Migrate django DB
        run: |
         cd ${{ inputs.DJANGO_PATH }}
         python manage.py migrate
      - name: Run django tests
        run: |
         cd ${{ inputs.DJANGO_PATH }}
         coverage erase
         coverage run --source='.' manage.py test --noinput
         coverage xml -i -o coverage-reports/coverage-django.xml
         coverage report --fail-under 50 

      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.DJANGO_PATH }}/coverage-reports/coverage-django-sonar.xml
          path: output/test/code-coverage.html
          retention-days: 1
