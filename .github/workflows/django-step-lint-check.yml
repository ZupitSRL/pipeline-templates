name: Lint and check a Django app

on:
  workflow_call:
    inputs:
      LABELS:
        required: true
        type: string
      WORKING_DIRECTORY:
        required: true
        type: string
      PYTHON_VERSION:
        required: true
        type: string
      PYTHON_IMAGE:
        required: true
        type: string

env: "${{secrets}}"

jobs:
  django-linter:
    runs-on: ${{ fromJson(inputs.LABELS) }}
    container: ${{ inputs.PYTHON_IMAGE }}

    defaults:
      run:
        working-directory: ${{ inputs.WORKING_DIRECTORY }}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: django-runner
          POSTGRES_PASSWORD: django-runner
          POSTGRES_DB: django
      redis:
        image: redis

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        # TODO: must be fixed or handled the cache manually
#      - name: Setup python
#        uses: actions/setup-python@v4
#        with:
#          python-version: ${{ inputs.PYTHON_VERSION }}
#          cache: 'pip'
#          cache-dependency-path: ${{ inputs.WORKING_DIRECTORY }}/requirements.txt
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Copy env file
        run: cp .env.gitlab .env
      - name: Lint with flake8
        run: python -m flake8 .
      - name: Lint with black
        run: python -m black --check .
      - name: Django check
        run: python manage.py check
      - name: Django validate templates
        run: python manage.py validate_templates
      - name: Django check migrations
        run: python manage.py makemigrations ${DJANGO_MIGRATIONS_CHECK_APPS} --check --dry-run
      - name: Django validate migration
        run: python manage.py migrate --fake --no-input