name: Docker build and push node image to registry

on:
  workflow_call:
    inputs:
      LABELS:
        required: true
        type: string
      NODE_VERSION:
        required: true
        type: string
      RELEASE_ENVIRONMENT:
        required: true
        type: string
      WORKING_DIRECTORY:
        required: true
        type: string
      DOCKERFILE_PATH:
        required: true
        type: string
      DOCKER_IMAGE_NAME:
        required: true
        type: string
      DOCKER_IMAGE_TAG:
        required: true
        type: string
      BUILD_ARGS:
        required: true
        type: string
      REGISTRY_URL:
        required: false
        type: string
        default: ghcr.io
      REGISTRY_USER:
        required: false
        type: string
        default: ${{ github.actor }}
      ENVIRONMENT:
        required: false
        type: string
    outputs:
      DOCKER_IMAGE_NAME:
        description: "The docker image name that has been built"
        value: ${{ jobs.docker-build-and-push.outputs.DOCKER_IMAGE_NAME }}

env: "${{secrets}}"

jobs:
  docker-build-and-push:
    runs-on: ${{ fromJson(inputs.LABELS) }}

    outputs:
      DOCKER_IMAGE_NAME: ${{ steps.docker.outputs.DOCKER_IMAGE_NAME }}

    steps:
      - name: NodeJS Build
        uses: ./.github/actions/node/build
        with:
          NODE_VERSION: ${{ inputs.NODE_VERSION }}
          RELEASE_ENVIRONMENT: ${{ inputs.RELEASE_ENVIRONMENT }}
          ENVIRONMENT: ${{ inputs.ENVIRONMENT }}
          WORKING_DIRECTORY: ${{ inputs.WORKING_DIRECTORY }}
        env: "${{secrets}}"

      - name: Docker Build & Push
        id: docker
        uses: ./.github/actions/docker/build-and-push
        with:
          REGISTRY_URL: ${{ inputs.REGISTRY_URL }}
          REGISTRY_USER: ${{ inputs.REGISTRY_USER }}
          REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          WORKING_DIRECTORY: ${{ inputs.WORKING_DIRECTORY }}
          DOCKERFILE_PATH: ${{ inputs.DOCKERFILE_PATH }}
          DOCKER_IMAGE_NAME: ${{ inputs.DOCKER_IMAGE_NAME }}
          DOCKER_IMAGE_TAG: ${{ inputs.DOCKER_IMAGE_TAG }}
          BUILD_ARGS: ${{ inputs.BUILD_ARGS }}
        env: "${{secrets}}"
